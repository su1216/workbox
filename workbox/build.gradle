apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

ext {
    libName = "workbox"
}

android {
    compileSdkVersion = rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        aarMetadata {
            minCompileSdk = rootProject.ext.compileSdkVersion
        }
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName rootProject.ext.version

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        buildConfigField "String", "VERSION_NAME", "\"${rootProject.ext.version}\""
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

    buildFeatures {
        buildConfig = true
    }

    testFixtures {
        enable = true
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    namespace 'com.su.workbox'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = rootProject.ext.libGroup
            artifactId = 'workbox'
            version = rootProject.ext.version

            afterEvaluate {
                from components.release
            }
        }
    }
}

dependencies {
    implementation libs.kotlin.stdlib.jdk8
    implementation libs.kotlin.reflect
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    api fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly project(':annotations')
    implementation libs.legacy.support.v4
    implementation libs.legacy.support.v13
    implementation libs.material
    implementation libs.appcompat
    implementation libs.preference
    implementation libs.annotation
    implementation libs.recyclerview
    implementation libs.viewpager2
    api libs.constraintlayout
    implementation libs.gson

    // ViewModel
    implementation libs.lifecycle.viewmodel.ktx
    // LiveData
    implementation libs.lifecycle.livedata.ktx
    // Lifecycles only (without ViewModel or LiveData)
    implementation libs.lifecycle.runtime.ktx
    // Saved state module for ViewModel
    implementation libs.lifecycle.viewmodel.savedstate
    // Annotation processor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation libs.lifecycle.common.java8
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation libs.lifecycle.process

    implementation libs.room.runtime
    annotationProcessor libs.room.compiler

    //third party openSource
    compileOnly libs.rhino
    //OkHttp
    compileOnly libs.okhttp
    compileOnly libs.okhttp.logging.interceptor
}
